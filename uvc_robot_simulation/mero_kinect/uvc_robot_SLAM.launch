<launch>
  
   <include file="$(find aws_robomaker_hospital_world)/launch/hospital.launch">
    <arg name="gui" default="true"/>
  </include>
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find mero_kinect)/rviz_conf.rviz" />
  <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 base_footprint camera_link 50" />
  <node pkg="tf" type="static_transform_publisher" name="link2_broadcaster" args="0 0 0 0 0 0 camera_link base_link 50" />
  
  <arg name="database_path"   default="rtabmap.db"/>
  <arg name="localization"   default="false"/>
  
  <arg name="wait_for_transform"   default="0.2"/>
  
  <!-- Kinect cloud to laser scan -->
    <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
      <remap from="image"       to="/camera/depth/image_raw"/>
      <remap from="camera_info" to="/camera/depth/camera_info"/>
      <remap from="scan"        to="/kinect_scan"/>
      <param name="range_max" type="double" value="4"/>
      <param name="output_frame_id" type="str" value="camera_link"/>
    </node>
<!-- 
    ROS navigation stack with velocity smoother and safety (reactive) controller
-->
  <arg name="odom_frame_id"   default="odom"/>
  <arg name="base_frame_id"   default="base_footprint"/>
  <arg name="global_frame_id" default="map"/>
  <arg name="odom_topic" default="odom" />
  <arg name="laser_topic" default="/kinect_scan" />
  <arg name="custom_param_file" default="$(find mero_kinect)/param/dummy.yaml"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find mero_kinect)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find mero_kinect)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />   
    <rosparam file="$(find mero_kinect)/param/local_costmap_params.yaml" command="load" />   
    <rosparam file="$(find mero_kinect)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find mero_kinect)/param/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find mero_kinect)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find mero_kinect)/param/global_planner_params.yaml" command="load" />
    <rosparam file="$(find mero_kinect)/param/navfn_global_planner_params.yaml" command="load" />
    <!-- external params file that could be loaded into the move_base namespace -->
    <rosparam file="$(arg custom_param_file)" command="load" />
    
    <!-- reset frame_id parameters using user input data -->
    <param name="global_costmap/global_frame" value="$(arg global_frame_id)"/>
    <param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="local_costmap/global_frame" value="$(arg odom_frame_id)"/>
    <param name="local_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="DWAPlannerROS/global_frame_id" value="$(arg odom_frame_id)"/>

    <remap from="cmd_vel" to="cmd_vel"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <remap from="scan" to="$(arg laser_topic)"/>
  </node>



  <!-- SLAM -->
  <group ns="rtabmap">
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
          <param name="frame_id" type="string" value="base_footprint"/>

          <param name="subscribe_depth" type="bool" value="true"/>
          <param name="subscribe_scan" type="bool" value="true"/>

          <remap from="odom" to="/odom"/>+
          <remap from="scan" to="/kinect_scan"/>
          <remap from="camera_depth_frame" to="camera_link"/>

          <remap from="rgb/image"       to="/camera/color/image_raw"/>
          <remap from="depth/image"     to="/camera/depth/image_raw"/>
          <remap from="rgb/camera_info" to="/camera/color/camera_info"/>

          <param name="queue_size" type="int" value="10"/>
          
          <remap from="grid_map" to="/map"/>

          <!-- RTAB-Map's parameters -->
          <param name="RGBD/ProximityBySpace"     type="string" value="false"/>
          <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
          <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
          <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
          <param name="Reg/Force3DoF"             type="string" value="true"/>
          <param name="Vis/MinInliers"            type="string" value="12"/>
          <param name="Mem/IncrementalMemory"     type="string" value="true"/>
      <!--    <param if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
          <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
          <param name="Mem/IncrementalMemory" type="string" value="$(arg localization)"/> -->
    </node>
  </group>
</launch>
